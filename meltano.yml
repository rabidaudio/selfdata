version: 1
default_environment: sandbox
send_anonymous_usage_stats: true
project_id: 7719d6c0-e1ea-45f2-85e4-a647da2211dd
state_backend:
  uri: s3://audio-rabid-selfdata/_state
plugins:
  extractors:
  - name: tap-lastfm
    namespace: tap_lastfm
    pip_url: git+https://github.com/rabidaudio/tap-lastfm.git@v1.0.1
    executable: tap-lastfm
    capabilities:
    - catalog
    - discover
    - state
    settings:
    - name: api_key
      kind: password
    - name: usernames
      kind: array
    - name: user_agent
      kind: string
    - name: start_date
      kind: date_iso8601
    config:
      api_key: $TAP_LASTFM_API_KEY
      usernames:
      - rabidaudio
      - kath_ebooks
      - valwigg
      - UntiLiUnderstan
      - trackstarlol
      - schwegler
      - emorphis
    select:
    - '*.*'
    - '!*.*image*'
  - name: tap-lichess
    namespace: tap_lichess
    pip_url: git+https://github.com/rabidaudio/tap-lichess.git@v1.0.1
    executable: tap-lichess
    capabilities:
    - catalog
    - discover
    - state
    settings:
    - name: auth_token
      kind: password
    - name: usernames
      kind: array
    config:
      usernames:
      - charlesjuliank
      - chuckbruckus
      - MaksimSundukov
      - LivAgar
      - Tom_Ripley
    select:
    - '*.*'
  loaders:
  - name: target-athena
    variant: meltanolabs
    pip_url: git+https://github.com/rabidaudio/target-athena.git@80d29af
    config:
      s3_bucket: $WAREHOUSE_BUCKET
      athena_database: $MELTANO_EXTRACTOR_NAMESPACE
      aws_region: $WAREHOUSE_REGION
      add_record_metadata: true
      object_format: jsonl
      compression: gzip
      s3_staging_dir: $WAREHOUSE_STAGING_DIR
      partition_keys:
        dt: date(row['_sdc_extracted_at'])
  transformers:
  - name: dbt-athena
    inherit_from: dbt-postgres
    pip_url: dbt-core~=1.3.0 dbt-athena-community~=1.3.1 git+https://github.com/meltano/dbt-ext.git@main
    commands:
      generate-source: run-operation generate_source --args ''{"schema_name":"$MELTANO_LOAD_SCHEMA","generate_columns":true}''
      test-freshness: source freshness
    config:
      profiles_dir: $MELTANO_PROJECT_ROOT/transform/profiles/athena
      s3_staging_dir: $WAREHOUSE_STAGING_DIR
  - name: dbt-postgres
    variant: dbt-labs
    pip_url: dbt-core~=1.3.0 dbt-postgres~=1.3.0
  utilities:
  - name: sqlfluff
    variant: sqlfluff
    pip_url: sqlfluff~=0.13.2 sqlfluff-templater-dbt~=0.13.2 dbt-postgres~=1.0.0
    commands:
      fix: fix
  - name: kms
    namespace: kms
    pip_url: git+https://github.com/meltano/kms-ext.git
    executable: kms
    commands:
      encrypt: encrypt $KMS_KEY_ID meltano.pubkey --dotenv-path .env
    config:
      key_id: 0fa127ec-17d0-4d96-9ffc-cc86d903903c
  - name: dagster
    namespace: dagster
    pip_url: -e orchestrate[dev]
    executable: dagster
    settings:
    - name: schedule_timezone
      env: DAGSTER_SCHEDULE_TIMEZONE
    - name: home
      env: DAGSTER_HOME
      value: $MELTANO_PROJECT_ROOT/orchestrate
    # workdir: $DAGSTER_HOME
    commands:
      ui:
        executable: dagit
        args: '-p 4000'
      materalize: job execute -m my_meltano_project --job __ASSET_JOB
      test:
        args: -v
        executable: pytest
      fix:
        executable: tox
        args: '-v'
      test_lint:
        args: -e lint
        executable: tox
    config:
      schedule_timezone: America/New_York

schedules:
- name: daily_pipeline
  interval: '@daily'
  job: daily_pipeline
environments:
- name: sandbox
  env:
    WAREHOUSE_BUCKET: audio-rabid-selfdata
    WAREHOUSE_STAGING_DIR: s3://audio-rabid-selfdata/_sandbox/_staging
    WAREHOUSE_REGION: us-east-1
jobs:
- name: daily_pipeline
  tasks:
  - dbt-athena:compile dagster:materalize
